# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sun Nov 26 16:09:07 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))